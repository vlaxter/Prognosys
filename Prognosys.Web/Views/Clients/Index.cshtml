@model IEnumerable<Prognosys.Web.ViewModels.ClientViewModel>

@{
< a href = "~/Controllers/BasicClientsController.cs" > ~/ Controllers / BasicClientsController.cs </ a >
     ViewBag.Title = "Index";
}

<div id="app-clients" class="col-md-offset-4 col-md-4">
    <h2>Clients</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>

    <div class="ibox-content">
        <table class="table table-striped table-bordered table-hover " id="editable">
            <thead>
                <tr>
                    <th>
                        Name
                    </th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="client in clients" class="gradeX">
                    <td>{{ client.Name }}</td>
                    <td>
                        <a class="modal-link" :href="'@Url.Action("ShowModalContent")/' + client.Id"><i class="fa fa-eye"></i></a>&nbsp;
                        <a title="Edit" v-on:click="actionClicked"><i class="fa fa-pencil"></i></a>&nbsp;
                        <a title="Delete" v-on:click="actionClicked"><i class="fa fa-times"></i></a>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>

    @Html.Partial("_Modal")
</div>

@section scripts {
    <script type="text/javascript">
        // vue objects. Should always be placed above the vue application declaration
        var clients = @Html.Raw(Json.Encode(Model))

        $(function () {
            // Initialize numeric spinner input boxes
            //$(".numeric-spinner").spinedit();
            // Initialize modal dialog
            // attach modal-container bootstrap attributes to links with .modal-link class.
            // when a link is clicked with these attributes, bootstrap will display the href content in a modal dialog.
            $('body').on('click', '.modal-link', function (e) {
                e.preventDefault();
                $(this).attr('data-target', '#modal-container');
                $(this).attr('data-toggle', 'modal');
            });
            // Attach listener to .modal-close-btn's so that when the button is pressed the modal dialog disappears
            $('body').on('click', '.modal-close-btn', function () {
                $('#modal-container').modal('hide');
            });
            //clear modal cache, so that new content can be loaded
            $('#modal-container').on('hidden.bs.modal', function () {
                $(this).removeData('bs.modal');
            });
            $('#CancelModal').on('click', function () {
                return false;
            });
        });
    </script>

    @Scripts.Render("~/vue")
    @Scripts.Render("~/vue/clients")
}